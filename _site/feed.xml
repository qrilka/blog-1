<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Мысли вслух</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://blog.dshevchenko.biz/feed.xml" />
<link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/" />
<updated>2014-06-04T09:26:36+04:00</updated>
<id>http://blog.dshevchenko.biz/</id>
<author>
  <name>Денис Шевченко</name>
  <uri>http://blog.dshevchenko.biz/</uri>
  <email>me@dshevchenko.biz</email>
</author>


<entry>
  <title type="html"><![CDATA[Пишем резюме на Haskell]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/6/4/cv-in-haskell.html"/>
  <id>http://blog.dshevchenko.biz/2014/6/4/cv-in-haskell</id>
  <published>2014-06-04T00:00:00+04:00</published>
  <updated>2014-06-04T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Вчера ночью пришло вдохновение, и решил я прикольнуться. Забегая вперёд, скажу, что прикол удался, мне и самому понравилось.&lt;/p&gt;

&lt;p&gt;Короче, решил я написать своё резюме на Haskell. Знаете, как это часто бывает? Разработчики пишут резюме, в котором, помимо всего прочего, выкладывают ссылки на примеры своего кода (где-нибудь на GitHub). А я подумал, почему бы не попробовать совместить резюме и код? И вот что из этого вышло:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;haskell&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-- Denis Shevchenko, 2014&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- CV, for Haskellers only. ;-)&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Main&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Control.Monad.Writer.Lazy&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Data.Functor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;$&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Data.List&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dropWhileEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Data.Char&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isSpace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;InfoAboutMe&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;InfoCloud&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Writer&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;InfoAboutMe&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Years&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;showYears&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Years&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;showYears&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;years&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fst&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;years&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; - &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;snd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;years&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;indent&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;bigIndent&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;    * &amp;quot;&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2014&lt;/span&gt; 

&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;InfoCloud&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Denis Shevchenko&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; 

&lt;span class=&quot;nf&quot;&gt;contacts&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;InfoCloud&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;contacts&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; 
    &lt;span class=&quot;kr&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawContactsLines&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;website:  http://dshevchenko.biz&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;quot;email:    me@dshevchenko.biz&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;quot;GitHub:   /denisshevchenko&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;quot;Google+:  +DenisShevchenko&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;quot;LinkedIn: /in/dshevchenkobiz&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;contactsLinesWithNL&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;$&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawContactsLines&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;prettyContactsLines&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bigIndent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;$&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contactsLinesWithNL&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prettyContactsLines&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;skills&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;InfoCloud&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;skills&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Skills: &amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dropWhileEnd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&amp;#39;,&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isSpace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concatMap&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Haskell&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;quot;C++11&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;quot;Objective-C&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;quot;OS X&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;quot;Linux&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;quot;Git&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;quot;Cocoa&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;quot;Network&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; 

&lt;span class=&quot;nf&quot;&gt;workAtSCC&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Years&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;InfoCloud&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;workAtSCC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;years&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;tell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigIndent&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Satellite Communication Center, &amp;quot;&lt;/span&gt; 
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fst&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;years&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; - &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;snd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;years&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; C++ developer.&amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;workAtInfrasoft&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Years&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;InfoCloud&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;workAtInfrasoft&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;years&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;tell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigIndent&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Infrasoft, &amp;quot;&lt;/span&gt; 
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showYears&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;years&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; C++ developer.&amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;workAtUnicommTelematics&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Years&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;InfoCloud&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;workAtUnicommTelematics&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;years&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;tell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigIndent&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Unicomm Telematics, &amp;quot;&lt;/span&gt; 
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showYears&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;years&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; C++ developer.&amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;workAtOVSoft&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Years&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;InfoCloud&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;workAtOVSoft&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;years&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;tell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigIndent&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;OV-Soft, &amp;quot;&lt;/span&gt; 
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showYears&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;years&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; C++ developer.&amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;workAtParagonSoftware&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Years&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;InfoCloud&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;workAtParagonSoftware&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;years&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;tell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigIndent&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Paragon Software, &amp;quot;&lt;/span&gt; 
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showYears&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;years&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; Senior C++ developer.&amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;experience&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;InfoCloud&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;experience&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Experience:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;workAtSCC&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2006&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2008&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workAtInfrasoft&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2008&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2009&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workAtUnicommTelematics&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2009&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2011&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workAtOVSoft&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2011&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2012&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workAtParagonSoftware&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2013&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;education&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Years&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;InfoCloud&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;education&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;years&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;tell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Education: &amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showYears&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;years&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;, &amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Moscow State Technological University &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Stankin&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;openProjects&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;InfoCloud&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;openProjects&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Open projects:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigIndent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Thoughts: http://blog.dshevchenko.biz&amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigIndent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;О Haskell по-человечески: http://ohaskell.dshevchenko.biz&amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigIndent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Haskell cookbook: http://bit.ly/1nMpWhp&amp;quot;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;IO&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; 
    &lt;span class=&quot;kr&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infoAboutMe&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;execWriter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
                                   &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contacts&lt;/span&gt; 
                                   &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;skills&lt;/span&gt;
                                   &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;education&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2004&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                                   &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;experience&lt;/span&gt;
                                   &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;openProjects&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;putStrLn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infoAboutMe&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;unusedTechnologies&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Microsoft&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Прикольно, не правда ли? Вот результат:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;  Denis Shevchenko
    * website:  http://dshevchenko.biz
    * email:    me@dshevchenko.biz
    * GitHub:   /denisshevchenko
    * Google+:  +DenisShevchenko
    * LinkedIn: /in/dshevchenkobiz

  Skills: Haskell, C++11, Objective-C, OS X, Linux, Git, Cocoa, Network

  Education: 1999 - 2004, Moscow State Technological University &lt;span class=&quot;s2&quot;&gt;&amp;quot;Stankin&amp;quot;&lt;/span&gt;

  Experience:
    * Satellite Communication Center, 2006 - 2008, C++ developer.
    * Infrasoft, 2008 - 2009, C++ developer.
    * Unicomm Telematics, 2009 - 2011, C++ developer.
    * OV-Soft, 2011 - 2012, C++ developer.
    * Paragon Software, 2013 - 2014, Senior C++ developer.

  Open projects:
    * Thoughts: http://blog.dshevchenko.biz
    * О Haskell по-человечески: http://ohaskell.dshevchenko.biz
    * Haskell cookbook: http://bit.ly/1nMpWhp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Идея была в том, чтобы отразить в этом компактном резюме мои нынешние Haskell-навыки. Скажем, можно было спокойно обойтись без &lt;code&gt;Writer&lt;/code&gt;, не так ли? Но зато сразу видно, что я имею представление о том, как работать с этим трансформером. :-) Аппликативный функтор затесался, частичное применение функции промелькнуло, работа с парой показана, и даже простая монадическая цепочка виднеется.&lt;/p&gt;

&lt;p&gt;Живёт это хозяйство в моём &lt;a href=&quot;https://gist.github.com/denisshevchenko/18507de8661a45094a1e&quot;&gt;GitHub Gist&lt;/a&gt;. Уверен, в будущем туда добавятся ещё кое-какие вкусности. Скажем, программная генерация итогового текста в PDF, или ещё что-нибудь в этом роде.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/6/4/cv-in-haskell.html&quot;&gt;Пишем резюме на Haskell&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, июнь 04, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Haskell и Linux: не только just for fun]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/6/1/haskell-and-linux.html"/>
  <id>http://blog.dshevchenko.biz/2014/6/1/haskell-and-linux</id>
  <published>2014-06-01T00:00:00+04:00</published>
  <updated>2014-06-01T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Недавно провёл любопытную аналогию между Haskell и Linux. А натолкнула меня на эту аналогию заметка пятилетней давности &lt;a href=&quot;http://habrahabr.ru/post/74164/&quot;&gt;Изучай Haskell ради… Haskell’а&lt;/a&gt;. Автор утверждает, что “Прагматика Haskell’а заключается в том, что он существует прежде всго для исследования… Haskell’а.”&lt;/p&gt;

&lt;p&gt;Вы знаете, с чего начался Linux? Он же был студенческой поделкой. А девиз помните? “Just for fun!” То есть хобби для развлекухи, и ничего более. И поэтому люди, которые до 2000 года что-то знали о Linux, использовали его исключительно ради Linux. Эта система не была средством, она была целью. Кто-то с её помощью познавал Unix-тонкости, играясь с файловыми системами. Кто-то баловался с ядром. Кто-то настраивал сеть. В общем, кто на что горазд…&lt;/p&gt;

&lt;p&gt;С тех пор минуло более 15 лет. И Linux, как и положено нормальной, зрелой операционной системе, из цели превратился в средство. Многие люди, работающий с Linux сегодня, уже не заморачиваются ни хитрым ручным разбиением диска на разделы, ни компиляцией vanilla-kernel, ни ручной установкой драйвера WiFi. Они просто ставят - и работают. Linux из развлекательной поделки стал важным (а иногда важнейшим) инструментом для многих бизнесов, в том числе бизнесов-гигантов. &lt;/p&gt;

&lt;p&gt;С языком Haskell, по моему мнению, та же история. Когда-то он, как верно заметил автор вышеупомянутой статий, был целью, а вовсе не средством. Люди, соприкасающиеся с этим языком, видели в нём только объект (тех или иных) исследований, а не инструмент для решения своих повседневных задач. И коммерческое использование Haskell было такой же экзотикой, как коммерческое использование Linux в 1997 году…&lt;/p&gt;

&lt;p&gt;Но всё это было давно. Сегодня, я уверен, Haskell &lt;em&gt;уже может&lt;/em&gt; из цели превратиться в средство. Причём это нисколько не унизит этот прекрасный язык. Напротив, это даст импульс к его развитию, ведь красоту и мощь этого языка наконец-то начнут оценивать не только в свете академических высот, но и в свете реального практического применения.&lt;/p&gt;

&lt;p&gt;Вот такая мысль.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/6/1/haskell-and-linux.html&quot;&gt;Haskell и Linux: не только just for fun&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, июнь 01, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Haskell: новый сайт]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/5/29/haskell-new-site.html"/>
  <id>http://blog.dshevchenko.biz/2014/5/29/haskell-new-site</id>
  <published>2014-05-29T00:00:00+04:00</published>
  <updated>2014-05-29T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Приветствую!&lt;/p&gt;

&lt;p&gt;Сегодня узнал любопытную новость: Chris Done, один из серьёзных Haskell-еров, создал альтернативный сайт для языка Haskell. Напомню, что нынешний официальный сайт живёт по адресу &lt;a href=&quot;http://www.haskell.org/haskellwiki/Haskell&quot;&gt;haskell.org&lt;/a&gt;, а обновлённый вариант будет жить на &lt;a href=&quot;http://haskell-lang.org/&quot;&gt;haskell-lang.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Вот в &lt;a href=&quot;http://chrisdone.com/posts/haskell-lang&quot;&gt;этой заметке&lt;/a&gt; Крис объясняет, с чего это вдруг он решил сделать новую страницу. Но от себя могу сказать: молодец! Новая страница, во-первых, красивее, удобнее и современнее, а во-вторых, более информативная. И даже есть мобильная адаптация. На мой взгляд, новый сайт на порядок лучше старого.&lt;/p&gt;

&lt;p&gt;Сейчас сайт почти пуст. Но, судя по всему, работа над ним кипит, так что ждём новостей.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;И ещё…&lt;/h3&gt;

&lt;p&gt;На reddit сразу же закипело &lt;a href=&quot;http://www.reddit.com/r/haskell/comments/26rilp/an_alternative_haskell_home_page/&quot;&gt;обсужение этой новости&lt;/a&gt;. И вот один комментарий хотелось бы процитировать. Причём он касался не столько новой страницы для языка, сколько главной проблемы освоения этого языка. И могу сказать, что подписываюсь под каждый словом!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;IMO the biggest issue to learning Haskell by oneself is that almost all the existing library documentation require you to already be a haskell expert before you can use them, nevermind just understand them. It’s very difficult to learn “apprentice style”.&lt;/p&gt;

  &lt;p&gt;What I’d really love to see is the library documentation significantly enhanced by examples of how to use them that don’t require a deep understanding of advanced concepts.&lt;/p&gt;

  &lt;p&gt;For example, I can easily use hoogle to find a tcpip library (several of them) and I can look at the types and functions. But it’s incredibly difficult to put that stuff together to make a working program without a steep learning curve.&lt;/p&gt;

  &lt;p&gt;Instead, give me black-box cookbook stuff that I can begin to deploy and understanding will follow over time. Right now, it’s way easier to use other languages to get the job done, even with very little knowledge. For a practicing developer, that counts for a lot.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Мой вольный перевод:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;На мой взгляд, наибольшей проблемой, с которой сталкиваются все Haskell-новички, является следующее положение: почти все существующие пакеты в Hackage снабжены такой документацией, понять которую могут лишь те, кто &lt;strong&gt;уже&lt;/strong&gt; эксперт по Haskell. Естественно, для новичков это не подходит.&lt;/p&gt;

  &lt;p&gt;Чего бы я действительно хотел, так это документация к пакетам, насыщенная практическими примерами, не требующими глубокого понимания подкапотных вещей.&lt;/p&gt;

  &lt;p&gt;К примеру, я могу, используя Hoogle, мгновенно найти пакет tcpip (и даже не один), и моему взору предстанет описание всех типов и функций. Однако понять, &lt;em&gt;как&lt;/em&gt; из всего это хозяйства создать нечто работающее, невероятно трудно.&lt;/p&gt;

  &lt;p&gt;Да блин, дайте мне нормальную книгу рецептов, позволяющую мне сразу понять что к чему и сразу начать что-то делать. Не копаться в кишках тех или иных инструментов, а &lt;em&gt;пользоваться&lt;/em&gt; ими, как если бы они были чёрными ящиками. В настоящий момент, для успешного решения конкретных задач значительно проще использовать другие языки программирования. И это очень важно для практикующих разработчиков.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Подписываюсь! Обозначенная проблема действительно актуальна, говорю это как новичок, перекопавший уже множество пакетов из Hackage. Документация ко многим из них призвана не к тому, чтобы научить новичка &lt;em&gt;пользоваться&lt;/em&gt; пакетом, а к тому, чтобы просто перечислить все внутренние типы, классы и функции. Ну хоть бы один примерчик, ну хотя бы Hello World!&lt;/p&gt;

&lt;p&gt;Да, исключения есть, но их очень мало. И это то, что отталкивает новичков от Haskell. И не потому, что они дебилы, а потому, что у них нет ни времени, ни желания копаться в кишках пакета.&lt;/p&gt;

&lt;p&gt;Ну что ж, проблема обозначена, осталось лишь внести свой посильный вклад в её решение.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/5/29/haskell-new-site.html&quot;&gt;Haskell: новый сайт&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, май 29, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Монадные трансформеры: "облако" внутри Haskell]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/5/19/haskell-transformers-begin.html"/>
  <id>http://blog.dshevchenko.biz/2014/5/19/haskell-transformers-begin</id>
  <published>2014-05-19T00:00:00+04:00</published>
  <updated>2014-05-19T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Доброе время суток!&lt;/p&gt;

&lt;p&gt;Я наконец-то въехал в монадные трансформеры. Механизм оказался на удивление красивым и полезным. И если &lt;code&gt;MaybeT&lt;/code&gt; элегантен, то в &lt;code&gt;ReaderT&lt;/code&gt; я просто влюбился.&lt;/p&gt;

&lt;p&gt;Традиционно считается, что освоить трансформеры тяжело. И это действительно так, поскольку большинство имеющихся разъяснений никуда не годятся. А ведь обиднее всего то, что механизм основных трансформеров изящен и действительно полезен на практике, но из-за невнятности имеющихся tutorial-ов новички проходят эту тему стороной. Я часто сталкивался с мнением, что трансформеры - это вообще самая сложная тема в Haskell.&lt;/p&gt;

&lt;p&gt;Рад сообщить, что в книге появились две главы, посвящённые стандартным трансформерам. А &lt;code&gt;ReaderT&lt;/code&gt; меня просто покорил. Это ж прям “облачный механизм” внутри Haskell! Сейчас модно говорить об облаках, и я провёл параллель между облачными технологиями и трансформером &lt;code&gt;ReaderT&lt;/code&gt;. И в самом деле, как мы закидываем документ в Google Drive, чтобы иметь к нему доступ из разных мест, так и &lt;code&gt;ReaderT&lt;/code&gt; забрасывает в “общее облако” некое значение, видимое группе функций. Элегатно, компактно и удобно.&lt;/p&gt;

&lt;p&gt;Заинтересованы? Прошу &lt;a href=&quot;http://ohaskell.dshevchenko.biz/ru/delicious/transformers-reader.html&quot;&gt;сюда&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Вскоре будут добавлены главы про &lt;code&gt;WriterT&lt;/code&gt; и &lt;code&gt;StateT&lt;/code&gt;. Кстати, понимать суть стандартных трансформеров нужно ещё и потому, что они задействованы во многих реальных проектах.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/5/19/haskell-transformers-begin.html&quot;&gt;Монадные трансформеры: "облако" внутри Haskell&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, май 19, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Поваренная книга Haskell: начало положено]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/5/15/haskell-cookbook.html"/>
  <id>http://blog.dshevchenko.biz/2014/5/15/haskell-cookbook</id>
  <published>2014-05-15T00:00:00+04:00</published>
  <updated>2014-05-15T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Приветствую, друзья!&lt;/p&gt;

&lt;p&gt;Рад сообщить, что поваренная книга Haskell открыта. Строго говоря, некоторые из вас об этом уже знают, поскольку &lt;a href=&quot;http://cookbook.dshevchenko.biz/&quot;&gt;ссылка&lt;/a&gt; на неё висит на главной странице уже почти неделю.&lt;/p&gt;

&lt;p&gt;В своё время мне очень помогла полезная книжка по C++, называется “C++. Сборник рецептов”. Кому интересно - &lt;a href=&quot;http://www.booksgid.com/programmer/36636-c.-sbornik-receptov.html&quot;&gt;вот она&lt;/a&gt;. В ней собраны готовые рецепты для решения многих повседневных задач, стоящих перед C++-разработчиком.&lt;/p&gt;

&lt;p&gt;Именно это я хочу сделать по отношению к Haskell. У каждого программиста, решившего попробовать этот язык в деле, обязательно будут возникать вопросы, мол, “а как в Haskell сделать вот это?”… А если есть вопросы - должны быть и ответы. Да, они есть на Stackoverflow, но, во-первых, они разбросаны, во-вторых, не всегда корректны, а в-третьих, зачастую неполны. Например, верный код приведён, а какие пакеты нужно установить для его работы и какие модули требуются - об этом ни слова.&lt;/p&gt;

&lt;p&gt;Именно поэтому я решил создать каталог готовых и простых Haskell-рецептов для решения обыденных задач. Да, пока их мало, но потом будет значительно больше.&lt;/p&gt;

&lt;p&gt;Собственно, &lt;a href=&quot;http://cookbook.dshevchenko.biz&quot;&gt;вот книга&lt;/a&gt;. Оформлена в виде блога, я счёл это удобным. Замечания и пожелания приветствуются.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/5/15/haskell-cookbook.html&quot;&gt;Поваренная книга Haskell: начало положено&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, май 15, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[В защиту Haskell: по следам одного Хабра-спора...]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/5/11/haskell-discussion.html"/>
  <id>http://blog.dshevchenko.biz/2014/5/11/haskell-discussion</id>
  <published>2014-05-11T00:00:00+04:00</published>
  <updated>2014-05-11T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;На бескрайних просторах Хабра встретилась мне одна &lt;a href=&quot;http://habrahabr.ru/post/133277/&quot;&gt;любопытнейшая тема&lt;/a&gt;. Она довольно стара (ноябрь 2011 года), но это не делает её менее интересной. И интересна она не только тем, что предельно понятным языком объясняет суть теории категорий (да-да, того самого “страшного” математического раздела, из которого вышли понятия монады, моноида и иже с ними), но и тем, что в комментариях к этой теме завязалась примечательная дискуссия. На самом деле, дискуссия там весьма обширна, но меня зацепили комментарии одного пользователя, некоего Бахтерева Михаила Олеговича (зарегистрированного под ником &lt;code&gt;mikhanoid&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Вот с чего всё началось:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Эх. Вот было бы ещё в Haskell так же просто байтик по адресу 0xb8000 записать, цены бы ему не было. А так. Ну да, математика, на да, формально, ну да, можно мозг поупражнять. А дальше? А ведь не особо опытные менджеры уже начинают пытаться внедрять Haskell в production. Ужас. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Затравка цепляет. Ему совершенно справедливо отвечают, мол, не все задачи сводятся к «записать байтик». На что он говорит:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;В разработке software — все. Как бы всё равно никому ещё не удалось разработать не-фон-Неймановский универсальный процессор. А там запись байтиков направо и налево :) И вот нам говорят: машина работает одним способом, но нет, мы не будем придумывать язык, который позволит естественное для машины поведение программировать наиболее естественным образом. Мы, наоборот, абстрагируемся, а потом будем ковыряться левой пяткой в правом ухе для решения простейших задач. Не понимаю я, к чему это?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Выходит, абстрагирование от архитектуры процессора вынуждает нас ковыряться левой пяткой в правом ухе для решения простейших задач… Довод из прошлого тысячелетия, но ладно уж, продолжим:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Дело не собственно в памяти. Чтобы организовать обмен данными с внешним миром, нам нужно иметь канал связи с этим миром. А канал связи — это система, у которой нужно явно менять состояния. Если мы рассматриваем сам Haskell (ну, или любой чистый функциональный язык), то там нет такой концепции. Нельзя изменить состояние канала, можно только лишь создать новый канал. Но как внешний мир может узнать об изменении канала связи?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Вот в чём проблема. В Haskell, конечно, есть и указатели, и ссылки, и IO, но их невозможно запрограммировать на самом Haskell, поэтому они создаются искусственно, через специальные монады связанные со внешними библиотеками на Си. И эти монады отличаются от тех, которые можно создать на самом Haskell.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;И ещё:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Так это и есть философская проблема. Скажем, для Си или даже, допустим, Lua, вывод на консоль может быть написан на самих Си или Lua. А чистый функциональный язык уже не допускает этого.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;И тут нельзя сказать, что это просто консоль неправильная, не функциональная, потому что не может быть функциональной консоли.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;И вывод:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Поэтому нельзя на функциональном языке выразить работу с оборудованием и внешним миром. Нужны всякие костыли разной степени костыльности. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Вот такие доводы. К слову, этот Михаил Олегович - человек очень опытный, достаточно взглянуть на его темы на Хабре. Разумеется, вступать с таким человеком в дискуссию на его уровне я бы не стал, ибо занимаюсь задачами куда как менее сложными, чем он. Поэтому выскажу своё мнение как практик. &lt;/p&gt;

&lt;p&gt;Рассмотрим вот такую строку:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;readFile&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;/Users/dshevchenko/text&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;putStr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Содержимое файла &lt;code&gt;/Users/dshevchenko/text&lt;/code&gt; выводится на консоль. Вы представляете себе, сколько различных программных действий совершается от момента запуска такого кода до момента отображения текста файла в терминале? Их очень много, начиная от вызовов библиотечных функций и заканчивая работой ряда драйверов. И если бы мы очень захотели, то могли бы перечислить все эти действия. Только нужно ли нам это? Нет, нам нужно вывести содержимоей файла на консоль. И такой код прекрасно справляется с этой задачей. &lt;/p&gt;

&lt;p&gt;К чему это я… Михаил Олегович совершенно справедливо отмечает, что на Haskell &lt;em&gt;как таковом&lt;/em&gt; нельзя напрямую взаимодействовать с адресами байтов, и поэтому, разумееется, вывод на консоль не может быть написан на чисто функциональном языке. Однако, насколько я понял тон Михаила Олеговича, он ставит сей факт в укор чисто функциональному подходу как таковому. Мол, раз на нём нельзя явно изменять состояние областей памяти, значит этот язык пригоден исключительно для теоретически-академических целей, а места в real world ему нету…&lt;/p&gt;

&lt;p&gt;И вот сижу я и думаю - а почему, собственно, это такая проблема? Понятно, что где-то под капотом Haskell есть системные функции, написанные на старом добром C, и именно эти функции выполняют всю низкоуровневую работу. Но мне-то зачем об этом знать? Я, как программист-практик, знать этого не хочу, да и не обязан. Разумеется, в процессе выполненения кода, выводящего текст на консоль, происходит многократное изменение различных программных состояний, но мне до этого нет никакого дела. Если всё это под капотом, пусть там и остаётся, а я лучше буду думать о моих задачах, а не о том, как там байтики записываются.&lt;/p&gt;

&lt;p&gt;И я считаю, это очень хорошо и правильно, что вся низкоуровневая работа делегируется коду, написанному на языке C. Вы что думаете, в том же C++ память выделяется оператором &lt;code&gt;new&lt;/code&gt;? Нет, она выделяется старой доброй &lt;code&gt;malloc&lt;/code&gt;, а &lt;code&gt;new&lt;/code&gt; есть не более чем удобный синтаксический сахар. Значит ли это, что мы не должны пользоваться оператором &lt;code&gt;new&lt;/code&gt;? Едва ли…&lt;/p&gt;

&lt;p&gt;Так что в наших процессорах байтики пусть записываются направо и налево, а мы, живущие в 2014 году, позволим себе думать уже не о байтиках, а о других вещах.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/5/11/haskell-discussion.html&quot;&gt;В защиту Haskell: по следам одного Хабра-спора...&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, май 11, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Открыл исходники - открой и планы: waffle.io]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/4/29/waffle-io.html"/>
  <id>http://blog.dshevchenko.biz/2014/4/29/waffle-io</id>
  <published>2014-04-29T00:00:00+04:00</published>
  <updated>2014-04-29T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Очень и очень понравился мне один &lt;a href=&quot;https://waffle.io/&quot;&gt;сервис&lt;/a&gt;, привязанный к GitHub. До того понравился, что появилась &lt;a href=&quot;http://habrahabr.ru/post/221211/&quot;&gt;новая статья на Хабре&lt;/a&gt;. Рекомендую к ознакомлению, сервис и правда очень полезен и удобен.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/4/29/waffle-io.html&quot;&gt;Открыл исходники - открой и планы: waffle.io&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, апрель 29, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[EaxCast: поддержим проект вместе]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/4/28/eaxcast-campaign.html"/>
  <id>http://blog.dshevchenko.biz/2014/4/28/eaxcast-campaign</id>
  <published>2014-04-28T00:00:00+04:00</published>
  <updated>2014-04-28T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Не так давно была запущена кампаня по сбору средств для текстовой расшифровки 2-го сезона IT-подкаста EaxCast. Я с удовольствием слушаю этот подкаст, потому что в нём есть действительно полезные вещи.&lt;/p&gt;

&lt;p&gt;Итак, до конца сбора денег осталось две недели, так что вы ещё успеете. Поможем хорошему начинанию, оно того заслуживает.&lt;/p&gt;

&lt;p&gt;Всем заинтересовавшимся просьба следовать &lt;a href=&quot;https://boomstarter.ru/projects/120343/tekstovaya_rasshifrovka_2-go_sezona_it-podkasta_eaxcast&quot;&gt;сюда&lt;/a&gt;.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/4/28/eaxcast-campaign.html&quot;&gt;EaxCast: поддержим проект вместе&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, апрель 28, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[О бумажной книге: мысли и сомнения]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/4/27/paper-book-thoughts.html"/>
  <id>http://blog.dshevchenko.biz/2014/4/27/paper-book-thoughts</id>
  <published>2014-04-27T00:00:00+04:00</published>
  <updated>2014-04-27T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Доброе время суток, друзья!&lt;/p&gt;

&lt;p&gt;Прежде всего, я хочу ещё раз поблагодарить всех читателей моей книги. Для меня нет большей радости, чем видеть ваши отзывы и понимать, что мой труд не пропадает даром.&lt;/p&gt;

&lt;p&gt;Сегодня я хочу развёрнуто ответить на вопрос, уже многократно заданный мне на различных форумах, блогах и в личных письмах. Вопрос о бумажном издании книги “О Haskell по-человечески”. Я ответил на него одному человеку, потом второму, потом третьему, а потом понял, что вопрос этот будет повторяться, поэтому лучше ответить подробно и один раз для всех.&lt;/p&gt;

&lt;p&gt;Итак, что же с этой бумагой?.. Признаюсь, к бумажной книге у меня отношение уважительное. И несмотря на то, что эпоха бумажных IT-книг уже идёт к своему закату, до окончательной смерти этой эпохи ещё далековато. Многие разработчики всё ещё предпочитают бумагу, и я их понимаю: на моих полках тоже много бумажных книг по нашей профессии. И скажу вам честно: я хотел бы видеть мою книгу на полках книжных магазинов, а некоторым людям я хотел бы подарить её, что называется, с автографом.&lt;/p&gt;

&lt;p&gt;Ну, казалось бы, в чём же дело? Ведь есть целый ряд известных издательств, в той или иной степени ориентированных на компьютерную литературу. Это и &lt;a href=&quot;http://www.piter.com/&quot;&gt;Питер&lt;/a&gt;, и &lt;a href=&quot;http://www.symbol.ru/&quot;&gt;Символ-Плюс&lt;/a&gt;, и &lt;a href=&quot;http://www.williamspublishing.com/&quot;&gt;Вильямс&lt;/a&gt;, и &lt;a href=&quot;http://www.nit.com.ru/&quot;&gt;НиТ&lt;/a&gt;, и &lt;a href=&quot;http://dmkpress.com/&quot;&gt;ДМК Пресс&lt;/a&gt;, и ещё с десяток других. И они скорее всего ищут новых авторов (в конце концов, не за счёт ли авторов они и живут?). И всё же есть что-то, что меня останавливает…&lt;/p&gt;

&lt;p&gt;У бумажного книгоиздательства, несомненно, есть ряд плюсов. Во-первых, многие привыкли к физическим книгам, и готовы платить за них, причём зачастую больше, чем могли бы заплатить за электронный вариант. Во-вторых, бумажную книгу можно подарить, ведь многие (включая меня) твёрдо убеждены в том, что книга - это прекрасный подарок. В-третьих, не у всех есть электронные читалки, а читать с экрана опять-таки любят не все. И однако, при всех плюсах, имеется и несколько серьёзных минусов. О них и пойдёт речь далее.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;Минус номер раз - статичность&lt;/h3&gt;

&lt;p&gt;Как только бумажная книга издана - всё, на какое-то время она замерла. Как говорится, что написано пером, того не вырубишь топором. Электронный вариант, напротив, предельно динамичен и гибок. Исправить ошибку в тексте? Улучшить пример кода? Что-то дополнить/убрать/переписать? Внёс изменения в &lt;code&gt;.md&lt;/code&gt;-файлы, коммит-пуш - и готово, все читатели уже читают улучшенный вариант. Да, в бумажном книгоиздании существует понятие “Издание 2, исправленное и переработанное”, но это происходит не так быстро, как хотелось бы автору…&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;Минус номер два - опыт&lt;/h3&gt;

&lt;p&gt;Многие издательства, при передачи им рукописи, спрашивают автора о его опыте в рассматриваемой им области. И вот представьте себе такой диалог:&lt;/p&gt;

&lt;p&gt;&lt;span&gt;-&lt;/span&gt; Здравствуйте! Меня зовут Денис, я написал книгу о языке Haskell, хочу издаваться.&lt;br /&gt;
&lt;span&gt;-&lt;/span&gt; Прекрасно. А каков ваш опыт в данной тематике? Вы доцент кафедры информатики в МФТИ? Или, может, вы реализовали на Haskell пяток серьёзных проектов?&lt;br /&gt;
&lt;span&gt;-&lt;/span&gt; Нет, совсем не доцент и пока ничего не реализовал, только собираюсь.&lt;br /&gt;
&lt;span&gt;-&lt;/span&gt; Как это ничего не реализовали? Так вы что же, самоучка??&lt;br /&gt;
&lt;span&gt;-&lt;/span&gt; Да, я самоучка, но многих разработчиков моя книга заинтересовала, вот я и подумал, что…&lt;br /&gt;
&lt;span&gt;-&lt;/span&gt; Простите, молодой человек, мы вынуждены вам отказать. Мы - авторитетное издательство и не можем позволить себе издавать творения дилетантов-выскочек. До свидания!&lt;/p&gt;

&lt;p&gt;Я немного утрирую, но во многих издательствах мне примерно так и ответят. И едва ли их заинтересуют мои доводы о том, что многие читатели присылали мне восторженные отзывы и признавались, что более понятной книги о Haskell им видеть не доводилось. К сожалению, статус зачастую важнее сути.&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;Минус номер три - территория&lt;/h3&gt;

&lt;p&gt;Допустим, книгу издадут. Но её тираж едва ли превысит 2000 экземпляров. Следовательно, до многих городов нашей необъятной родины книга не дойдёт. Но программисты, интересующиеся Haskell, живут не только в Москве или Питере, они живут и в относительной глубинке. Если книга будет бумажной - пойди-ка найди её! Если же останется электронной - любой подключенный к Интернету сможет её прочесть.&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;Минус номер четыре - права&lt;/h3&gt;

&lt;p&gt;Этот минус - самый главный, самый весомый. Настолько весомый, что даже перекрывает собою предыдущие три минуса. Речь идёт об исключительных правах, передаваемых издательству автором. Большинство издательств, заключая с автором так называемый “авторский договор”, требует от автора передачи исключительных прав на текст. И чтобы было понятно, что это означает, приведу выдержку из авторского договора одного известного российского издательства:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;С момента одобрения Издательством созданного в рамках Договора Произведения, Автор предоставляет Издательству в объеме и на условиях, предусмотренных Договором, на условиях исключительной лицензии права на использование Произведения Издательством…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;… предоставленная в соответствии с данным Договором исключительная лицензия … означает исключительное и преимущественное право Издательства перед любыми лицами, включая Автора, осуществлять самостоятельно, разрешать осуществлять и запрещать осуществлять любым лицам, включая Автора, использование перечисленными способами Произведения как полностью, так и в любой части, а равно в любом дополненном и (или) переработанном виде, как в отдельности, так и путем объединения с любой иной информацией независимо от формы и способа ее выражения, вносить в Произведение изменения, сокращения и дополнения, снабжать Произведение при его использовании иллюстрациями, предисловием, послесловием, комментариями или какими бы то ни было пояснениями, на территории всех стран и государств мира в течение 10 (десяти) лет с момента одобрения Произведения Издательством.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Перевожу на нормальный язык: как только мою книгу решат издавать, права на её текст перейдут издательству, и в течение следующих 10 лет только издательство будет решать, когда, как и где сия книга будет опубликована и что будет с её текстом. Не всегда речь идёт именно о 10 годах, бывает и меньше, но суть не в этом. Суть в том, что такое требование - это огромный минус для меня. А чтобы вы поняли, почему, я буду с вами предельно откровенен.&lt;/p&gt;

&lt;p&gt;Почему я решил написать про Haskell? Потому что решил заработать? Смешно: учитывая авторские отчисления от каждого проданного экземпляра и предполагаемый объём первого тиража, я получу сумму, ощутимо уступающую моей месячной зарплате. И это при идеальных условиях, то есть если:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;авторские отчисления будут относительно щедрыми (процентов эдак двенадцать от закупочной цены),&lt;/li&gt;
  &lt;li&gt;весь тираж будет распродан (то есть в идеале 2 тысячи экземпляров),&lt;/li&gt;
  &lt;li&gt;издательство меня не кинет.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Значит, причина точно не в деньгах. Тогда, может, в том, чтобы прославиться? Ещё смешнее: книга столь специфической тематики никогда не будет продаваться стотысячными тиражами.&lt;/p&gt;

&lt;p&gt;Причина одна - я намерен внести вклад в сообщество и открыть моим коллегам удивительный мир функционального программирования. И скажу вам честно, моё намерение не осталось бесплодным: многие читатели написали мне, что благодаря моей книге они наконец-то поняли, что ФП - это нечто действительно реальное и полезное. Значит, дилетант вроде меня всё-таки смог донести до читателей красоту Haskell. К тому же, как уже знают многие из вас, я задумал не только развивать первый том книги, но и писать второй, и многие уже ждут его.&lt;/p&gt;

&lt;p&gt;И вот на всём этом будет поставлен жирный крест, если я заключу договор исключительной лицензии. Сразу же после заключения такого договора я буду вынужден удалить &lt;a href=&quot;https://github.com/denisshevchenko/ohaskell&quot;&gt;репозиторий&lt;/a&gt; книги, её &lt;a href=&quot;http://ohaskell.dshevchenko.biz/&quot;&gt;GitHub-страницу&lt;/a&gt;, а также все её электронные копии, уже сохранённые на нескольких сайтах. Кроме того, я уже не смогу вносить в книгу правки и дополнения, я смогу лишь вежливо попросить об этом редактора, а он единолично решит, стоит ли их вносить и когда будет переиздание. Причём, что самое неприятное, срок действия всех этих ограничений останется неизменным даже в том случае, если продажи первого тиража провалятся. То есть неважно, как будет продаваться твоя книга - раз заключил договор, будь добр на N лет подарить её издательству.&lt;/p&gt;

&lt;p&gt;Я не стану давать оценку подобным ограничениям типичного авторского договора. Хороши они или плохи - судить не мне. В конце концов, издательство тоже можно понять: ему нужно максимально подстраховаться, ибо его в первую очередь интересует финансовый успех книги, а не “вклад в русскоязычное IT-сообщество”.&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;Выводы?&lt;/h3&gt;

&lt;p&gt;Выводов чётких нет. С одной стороны, есть плюсы, с другой - серьёзные минусы. Поэтому я спрашиваю вас: что вы обо всём этом думаете? Буду рад любым мнениям и рекомендациям.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/4/27/paper-book-thoughts.html&quot;&gt;О бумажной книге: мысли и сомнения&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, апрель 27, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[От динамики к статике: прощай, Drupal...]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/4/22/goodbye-drupal.html"/>
  <id>http://blog.dshevchenko.biz/2014/4/22/goodbye-drupal</id>
  <published>2014-04-22T00:00:00+04:00</published>
  <updated>2014-04-22T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Да, решение принято, и обжалованию уже не подлежит: Drupal уходит из моей профессиональной жизни. Четыре года я использовал эту прекрасную CMS, но теперь пришла пора попрощаться. Я окончательно убедился в том, что для моих сайтов Drupal не нужен.&lt;/p&gt;

&lt;p&gt;В процессе настройки GitHub-страницы для книги я узнал о &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. Сказать, что меня зацепило - это не сказать ничего! Слияние GitHub и Markdown - это реально круто. Ну а поскольку второй том моей книги будет написан на Markdown и жить будет также на GitHub, мне будет вдвойне удобнее.&lt;/p&gt;

&lt;p&gt;Больше никаких админок, никаких БД, никаких бэкапов, паролей, обновлений и FTP. Только Vim, Markdown и Git. Добавил &lt;code&gt;.md&lt;/code&gt;-файл, затем &lt;code&gt;jekyll build&lt;/code&gt;, коммит-пуш - и новая запись уже в блоге. А блог, надо сказать, получился знатным. Во-первых, офигительно быстрым. Во-вторых, мобильно-адаптивным из коробки (на iPhone читается великолепно). В-третьих, красивым и удобным (спасибо &lt;a href=&quot;http://mademistakes.com/about/&quot;&gt;Michael Rose&lt;/a&gt; и его прекрасной &lt;a href=&quot;http://mademistakes.com/articles/so-simple-jekyll-theme/&quot;&gt;So Simple Theme&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;В общем, я доволен как слон. К тому же Jekyll позволил мне довольно безболезненно импортировать сюда всё содержимое старого блога. Да, пути стали другими, но Поиск по блогу - просто отменный.&lt;/p&gt;

&lt;p&gt;Да, от пользовательских аккаунтов я тоже отказался. Всё-таки для комментариев достаточно Disqus (который, кстати, тоже был прикручен к данному блогу прямо из коробки). К тому же удобно: даже если нет социальных профилей, один раз зарегистрировался на &lt;a href=&quot;http://disqus.com/&quot;&gt;Disqus&lt;/a&gt; - и можешь комментировать 100500 разных блогов.&lt;/p&gt;

&lt;p&gt;И ещё… В название поста сказано “от динамики к статике”. Это мне так по душе, ведь Haskell статичен… ;-)&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/4/22/goodbye-drupal.html&quot;&gt;От динамики к статике: прощай, Drupal...&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, апрель 22, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[О Haskell по-человечески: уже онлайн]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/4/14/ohaskell-online.html"/>
  <id>http://blog.dshevchenko.biz/2014/4/14/ohaskell-online</id>
  <published>2014-04-14T00:00:00+04:00</published>
  <updated>2014-04-14T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Приветствую, друзья!&lt;/p&gt;

&lt;p&gt;Рад сообщить, что моя книга теперь уютно живёт &lt;strong&gt;&lt;a href=&quot;http://ohaskell.ru/fst&quot;&gt;онлайн&lt;/a&gt;&lt;/strong&gt;. Я чуток подкорректировал &lt;strong&gt;&lt;a href=&quot;https://github.com/GitbookIO/gitbook/tree/master/theme&quot;&gt;умолчальную тему&lt;/a&gt;&lt;/strong&gt;, убрав из неё всё лишнее. Получилось лаконично, симпатично и мобильно-адаптивно.&lt;/p&gt;

&lt;p&gt;Многие читатели просили меня об этом, и наконец решение принято: теперь книга существует в формате Markdown &lt;strong&gt;&lt;a href=&quot;https://github.com/denisshevchenko/ohaskell&quot;&gt;в своём репозитории&lt;/a&gt;&lt;/strong&gt;. Все остальные форматы книги также будут создаваться из Markdown-файлов, так будет удобнее всем. Мне очень понравился формат Markdown, поэтому и второй том книги будет написан в нём.&lt;/p&gt;

&lt;p&gt;Кстати, о втором томе… Началась работа над маленьким проектом, описание которого ляжет в основу этого тома. Впрочем, работа над первым томом не завершена: он ещё будет дополнен и улучшен. Ждите новостей.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/4/14/ohaskell-online.html&quot;&gt;О Haskell по-человечески: уже онлайн&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, апрель 14, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[GitBook: как я строил веб-книгу]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/4/7/gitbook.html"/>
  <id>http://blog.dshevchenko.biz/2014/4/7/gitbook</id>
  <published>2014-04-07T00:00:00+04:00</published>
  <updated>2014-04-07T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Многие из читателей пожелали видеть HTML-версию моей книги. Думал я, думал - и наткнулся на прекрасный инструмент &lt;strong&gt;&lt;a href=&quot;http://www.gitbook.io/&quot;&gt;GitBook&lt;/a&gt;&lt;/strong&gt;. А что из этого вышло - читайте здесь: http://habrahabr.ru/post/218433.&lt;/p&gt;

&lt;p&gt;Скоро вся книга будет доступна тут: http://denisshevchenko.github.io/ohaskell/index.html.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/4/7/gitbook.html&quot;&gt;GitBook: как я строил веб-книгу&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, апрель 07, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[О Haskell по-человечески: четвёртое издание]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/4/1/ohaskell-fourth-edition.html"/>
  <id>http://blog.dshevchenko.biz/2014/4/1/ohaskell-fourth-edition</id>
  <published>2014-04-01T00:00:00+04:00</published>
  <updated>2014-04-01T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Итак, сегодня вышло в свет издание 0.4. Нет, это не первоапрельская шутка. Из новшеств:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Глава про интеграцию Haskell с языком C.&lt;/li&gt;
  &lt;li&gt;Корректировка PDF: новый шрифт, улучшенная структура.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Изучение просторов Stackoverflow убедительно доказало мне, что многих разработчиков интересует тема интеграции Haskell-приложения с модулями, написанными на иных языках. Но, когда я сам стал изучать эту тему, то выяснилось, что нормальных, пошаговых и понятных с &lt;em&gt;первого&lt;/em&gt; прочтения материалов по этому вопросу нет (впрочем, возможно я плохо искал). Именно поэтому в книгу добавлена глава про прикручивание C-функций к Haskell.&lt;/p&gt;

&lt;p&gt;Ну и по поводу PDF. Читатели обращались ко мне с жалобами, что со шрифтом, используемым в предыдущих изданиях, у них были проблемы. В частности, в Adobe Reader на Windows 7 некоторые буквы отображались криво, ну а в Firefox на Windows 7 - там вообще была плохочитаемый текст. Теперь всё выглядит значительно красивее: я нашёл прекрасный, неизбитый шрифт “Пермиан” (http://pcrd.ru/projects/167).&lt;/p&gt;

&lt;p&gt;Так что обновляйтесь, друзья: http://ohaskell.ru/&lt;/p&gt;

&lt;p&gt;P.S. К следующему изданию всё-таки доберусь до монадных трансформеров…&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/4/1/ohaskell-fourth-edition.html&quot;&gt;О Haskell по-человечески: четвёртое издание&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, апрель 01, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[О Haskell по-человечески и по-английски!]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/3/17/ohaskell-translation.html"/>
  <id>http://blog.dshevchenko.biz/2014/3/17/ohaskell-translation</id>
  <published>2014-03-17T00:00:00+04:00</published>
  <updated>2014-03-17T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Я в шоке, друзья!&lt;/p&gt;

&lt;p&gt;Вчера решил ради прикола опубликовать новость о третьем издании моей книги на Reddit. Ну, опубликовал в Haskell-группе. (http://redd.it/20k2we). Но, поскольку Reddit - это англоязычное сообщество, я не думал, что будет большой интерес к моей новости, тем более что опубликована она была по-русски.&lt;/p&gt;

&lt;p&gt;И тут мне пишут в комментарии, мол, а английский перевод вашей книги будет? Признаюсь, такого вопроса я точно не ожидал. А один из пользователей написал мне письмо, в котором также высказал идею о переводе. Я отвечаю, мол, спасибо на добром слове, но едва ли моя книга сможет соперничать с этой книгой: “Beginning Haskell, A Project-Based Approach”, http://www.apress.com/9781430262503. А он мне отвечает, мол, ваша книги лучше, потому что в ней нет “воды” и всё по делу.&lt;/p&gt;

&lt;p&gt;А сегодня я зашёл в обсуждение на Reddit, посмотреть последние комментарии, и чуть со стула не упал: пока я спал, один разработчик Jack Henahan, из университета в Вермонте, создал GitHub-репозиторий для группового английского перевода моей книги! Я даже глазам не поверил, но потом зашёл - и правда: https://github.com/jhenahan/ohaskell-translations.&lt;/p&gt;

&lt;p&gt;Признаться, к интересу со стороны моих англоязычных коллег я не был готов. Но раз он появился - я, разумеется, подключусь к переводу. Это будет классный проект!&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/3/17/ohaskell-translation.html&quot;&gt;О Haskell по-человечески и по-английски!&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, март 17, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[О Haskell по-человечески: первое издание]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/3/5/ohaskell-first-edition.html"/>
  <id>http://blog.dshevchenko.biz/2014/3/5/ohaskell-first-edition</id>
  <published>2014-03-05T00:00:00+04:00</published>
  <updated>2014-03-05T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Готово! Первое издание моей скромной книги о Haskell вышло в свет.&lt;/p&gt;

&lt;p&gt;Живёт оно тут: http://ohaskell.ru.&lt;/p&gt;

&lt;p&gt;Прямая ссылка: http://ohaskell.ru/get/ohaskell.pdf.&lt;/p&gt;

&lt;p&gt;Распространение книги в любой форме - приветствуется!&lt;/p&gt;

&lt;p&gt;Любые отзывы о книге, вопросы, предложения, а также разгромную критику присылайте прямиком на мою почту: me@dshevchenko.biz. Или прямо сюда, в комментариях. &lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/3/5/ohaskell-first-edition.html&quot;&gt;О Haskell по-человечески: первое издание&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, март 05, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[О геттерах и сеттерах]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/2/27/getters-and-setters.html"/>
  <id>http://blog.dshevchenko.biz/2014/2/27/getters-and-setters</id>
  <published>2014-02-27T00:00:00+04:00</published>
  <updated>2014-02-27T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Итак, есть у нас следующий код:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;cpp&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;worker&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;public:&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;set_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;m_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Перед нами - канонические геттер и сеттер. Первый &lt;em&gt;просто&lt;/em&gt; возвращает значение идентификатора рабочего, второй - &lt;em&gt;просто&lt;/em&gt; устанавливает это значение.&lt;/p&gt;

&lt;p&gt;И вот совсем недавно я со всею остротой понял, сколь бессмысленны канонические геттеры и сеттеры. От них нет абсолютно никакой пользы. Они только усложняют нашу жизнь.&lt;/p&gt;

&lt;p&gt;Сравним:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;cpp&quot;&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worker&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Суть не изменилась, а код стал короче и проще.&lt;/p&gt;

&lt;p&gt;Зачем мне прятать поле и при этом предоставлять две функции, открывающие доступ к нему? Это бессмысленно. К тому же на каждое поле мне придётся предоставлять по паре геттер-сеттер, и в большинстве случаев это будет два объявления и две реализации. Сравните это:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;cpp&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;worker&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;public:&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_section&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Где-то в .cpp-шнике&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;m_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;m_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_section&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;m_section&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;и это:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;cpp&quot;&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;worker&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Фундаментальная проблема канонических геттеров и сеттеров в том, что они раздувают мой код и привносят в него ненужную сложность, при этом ничего не давая мне взамен. А почему же этих геттеров и сеттеров полно в 99% всех C++-проектов? Виной тому - маниакальная страсть закрывать поля просто потому, что “в соответствии с принципом инкапсуляции данные должны быть сокрыты”.&lt;/p&gt;

&lt;p&gt;Должны быть сокрыты? Так скрывай их в pimpl, и будет тебе счастье. А то, видите-ли, объявил со словом &lt;strong&gt;&lt;code&gt;private&lt;/code&gt;&lt;/strong&gt;, но при этом предоставил две функции, сводящие всю эту &lt;strong&gt;&lt;code&gt;private&lt;/code&gt;&lt;/strong&gt;-ность к нулю. И чем это отличается от открытого поля? Ничем. &lt;/p&gt;

&lt;p&gt;Вывод: выкидывайте канонические геттеры и сеттеры. Окончательно и бесповоротно. А поля, к которым необходим &lt;em&gt;простой&lt;/em&gt; read-write доступ извне, просто делайте открытыми.&lt;/p&gt;

&lt;h3&gt;Уточнение&lt;/h3&gt;

&lt;p&gt;Вы заметили, я всё время повторяю слово “канонические”. Речь шла только о таких геттерах и сеттерах, которые &lt;em&gt;просто&lt;/em&gt; возвращают и &lt;em&gt;просто&lt;/em&gt; изменяют. Но при этом я вполне могу оправдать сеттер, который, помимо установки значения, производит некую проверку (и кричит на всю Ивановскую в случае проблем).&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/2/27/getters-and-setters.html&quot;&gt;О геттерах и сеттерах&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, февраль 27, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Об IT-книгах: пара мыслей вслух]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/2/22/it-books.html"/>
  <id>http://blog.dshevchenko.biz/2014/2/22/it-books</id>
  <published>2014-02-22T00:00:00+04:00</published>
  <updated>2014-02-22T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Недавно задумался о книгах… На мой взгляд, электронная книга уже победила бумажную. Люди всё больше привыкают к мысли о том, что книга в виде файла столь же книжная, как и книга в виде бумаги и клея.&lt;/p&gt;

&lt;p&gt;В самом деле, почему бы и нет? Купил электронную читалку - и в ней вся твоя библиотека. Удобное и компактное устройство в высшей степени мобильно. А экраны e-ink просто прекрасны! И никаких тебе книжных шкафов, заставленных устаревшей IT-литературой. Вот у меня сейчас лежит десятка три книг, которые уже беспросветно устарели, и больше не нужны ни мне, ни кому-либо из моих коллег. А выбросить… Да вроде как-то жалко, что ли… А электронную книгу - два клика и нету.&lt;/p&gt;

&lt;p&gt;А цены? Вы их видели? Электронная копия издания как минимум в два раза дешевле бумажной (а то и в три). К тому же, сейчас появилось много мест, где можно легально и быстро купить электронные издания. Ведь издательства тоже держат нос по ветру, поэтому электронный вариант бумажной книги - это уже не исключение, а почти правило.&lt;/p&gt;

&lt;p&gt;И кстати, ещё один фактор есть - экономия бумаги. Не улыбайтесь, эта тема серьёзнее чем думают многие. Почему бы не внести свой крошечный вклад в дело сохранения мировых лесов?&lt;/p&gt;

&lt;p&gt;В общем, электронная книга - это хорошо.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/2/22/it-books.html&quot;&gt;Об IT-книгах: пара мыслей вслух&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, февраль 22, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[После долгого затишья...]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/2/12/after-long-silence.html"/>
  <id>http://blog.dshevchenko.biz/2014/2/12/after-long-silence</id>
  <published>2014-02-12T00:00:00+04:00</published>
  <updated>2014-02-12T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Прошу прощения за длительное безмолвие. Все силы, свободные от основной работы, ушли на написание руководства по языку Haskell. Скоро, очень скоро оно будет готово. &lt;/p&gt;

&lt;p&gt;В процессе его написания я ещё больше убедился в том, что функциональное программирование в целом (и Haskell в частности) - это чрезвычайно интересная штуковина. И даже те аспекты этого языка, которые считаются архисложными и супернепонятными, оказались весьма логичными, удобными и совершенно не сложными.&lt;/p&gt;

&lt;p&gt;Я окончательно увидел &lt;em&gt;ложность&lt;/em&gt; представления о Haskell как о языке сугубо академическом и невероятно трудном в освоении для простых программистов. Скажу прямо: если уж я смог разобраться - значит смогут и многие, многие другие.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/2/12/after-long-silence.html&quot;&gt;После долгого затишья...&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, февраль 12, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Русские буквы в именах: невероятно, но факт]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2014/1/22/russian-letters-in-names.html"/>
  <id>http://blog.dshevchenko.biz/2014/1/22/russian-letters-in-names</id>
  <published>2014-01-22T00:00:00+04:00</published>
  <updated>2014-01-22T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;Случайно наткнулся на &lt;strong&gt;&lt;a href=&quot;http://eao197.blogspot.com/2014/01/progcwow-const-int-1.html&quot;&gt;одну заметку&lt;/a&gt;&lt;/strong&gt;, в которой говорится о живом коде на C++, в котором имена некоторых переменных набраны русскими буквами (в кодировке CP1251), и это компилируется!&lt;/p&gt;

&lt;p&gt;Дай, думаю, попробую. Никакого рационального зерна тут нет, просто ради смешного эксперимента… Кодировка у меня UTF-8, но попробовать всё равно захотелось.&lt;/p&gt;

&lt;p&gt;Итак, C++:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;cpp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;код&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cerr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;код&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;К счастью, или к сожалению, сей код не компилируется, и ошибка компиляции вполне ожидаемая:&lt;/p&gt;

&lt;bash&gt;
stray &#39;\320&#39; in program
&lt;/bash&gt;

&lt;p&gt;А теперь, ради эксперимента, попробуем на Haskell:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;haskell&quot;&gt;&lt;span class=&quot;err&quot;&gt;больше&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;чем&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;больше&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;чем&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;больше&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;чем&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вы не поверите, но это компилируется и работает! Не знаю, хорошо это или плохо, но русскоязычное имя функции допустимо, в том числе и в инфиксной форме, как здесь.&lt;/p&gt;

&lt;p&gt;Кроме того, я могу использовать русские буквы в имени типа:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;haskell&quot;&gt;&lt;span class=&quot;kr&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;IP_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;адрес&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;IP_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;адрес&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;И это тоже работает! А как вам такое:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;haskell&quot;&gt;&lt;span class=&quot;kr&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Строка&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Машина&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;номер&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Строка&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Я чуть со стула не упал! Друзья, я не поверил своим глаза (как, вероятно, не верите и вы), но это работает! Ещё сегодня утром я был бы готов поспорить, что такое невозможно. Но, как видим, и невозможное возможно…&lt;/p&gt;

&lt;p&gt;Впрочем, я надеюсь, вы не рассматриваете эту заметочку как призыв русифицировать свой код. :)&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2014/1/22/russian-letters-in-names.html&quot;&gt;Русские буквы в именах: невероятно, но факт&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, январь 22, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Haskell: идея]]></title>
  <link rel="alternate" type="text/html" href="http://blog.dshevchenko.biz/2013/12/29/haskell-idea.html"/>
  <id>http://blog.dshevchenko.biz/2013/12/29/haskell-idea</id>
  <published>2013-12-29T00:00:00+04:00</published>
  <updated>2013-12-29T00:00:00+04:00</updated>
  <author>
    <name>Денис Шевченко</name>
    <uri>http://blog.dshevchenko.biz</uri>
    <email>me@dshevchenko.biz</email>
  </author>
  <content type="html">&lt;p&gt;В общем, после долгих размышлений, после первичного восторга от ФП в целом и от Haskell в частности я решил внести свой посильный вклад в популяризацию Haskell среди русскоязычного IT-сообщества.&lt;/p&gt;

&lt;p&gt;На мой взгляд, одним из важных препятствий на пути развития Haskell в России является очень малое количество русскоязычных руководств. Нет, руководства-то имеются, но большая их часть - это те самые, с числами Фибоначчи которые…&lt;/p&gt;

&lt;p&gt;Поэтому я решил не ограничиваться рамками данного блога, а сделать отдельный сайт, посвящённый практическому руководство по языку Haskell. Цель этого руководства - пошаговое, максимально понятное и предельное практичное объяснение сущности языка Haskell и вменяемая демонстрация его реального использования.&lt;/p&gt;

&lt;p&gt;И тот факт, что я, мягко выражаясь, не являюсь доцентом МФТИ, как раз является преимуществом для такой задумки! Потому что если уж я смогу разобраться с этим самым Haskell, то и многие другие тоже смогут. &lt;/p&gt;

&lt;p&gt;Следите за новостями…&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://blog.dshevchenko.biz/2013/12/29/haskell-idea.html&quot;&gt;Haskell: идея&lt;/a&gt; опубликовано Денисом Шевченко на &lt;a href=&quot;http://blog.dshevchenko.biz&quot;&gt;Мысли вслух&lt;/a&gt;, декабрь 29, 2013.&lt;/p&gt;</content>
</entry>

</feed>
